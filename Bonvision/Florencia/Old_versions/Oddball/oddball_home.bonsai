<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.6.3"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:gl="clr-namespace:Bonsai.Shaders;assembly=Bonsai.Shaders"
                 xmlns:res="clr-namespace:Bonsai.Resources;assembly=Bonsai.System"
                 xmlns:num="clr-namespace:Bonsai.Numerics;assembly=Bonsai.Numerics"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:scr="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:CreateWindow">
          <gl:Width>640</gl:Width>
          <gl:Height>480</gl:Height>
          <gl:VSync>On</gl:VSync>
          <gl:SwapSync>false</gl:SwapSync>
          <gl:ClearColor>Gray</gl:ClearColor>
          <gl:ClearMask>DepthBufferBit ColorBufferBit</gl:ClearMask>
          <gl:CursorVisible>true</gl:CursorVisible>
          <gl:Location xsi:nil="true" />
          <gl:WindowBorder>Fixed</gl:WindowBorder>
          <gl:WindowState>Fullscreen</gl:WindowState>
          <gl:DisplayDevice>Second</gl:DisplayDevice>
          <gl:TargetRenderFrequency>60</gl:TargetRenderFrequency>
          <gl:TargetUpdateFrequency xsi:nil="true" />
          <gl:RenderState />
          <gl:GraphicsMode>
            <gl:ColorFormat>
              <gl:Red>8</gl:Red>
              <gl:Green>8</gl:Green>
              <gl:Blue>8</gl:Blue>
              <gl:Alpha>8</gl:Alpha>
            </gl:ColorFormat>
            <gl:Depth>16</gl:Depth>
            <gl:Stencil>0</gl:Stencil>
            <gl:Samples>0</gl:Samples>
            <gl:AccumulatorFormat>
              <gl:Red>0</gl:Red>
              <gl:Green>0</gl:Green>
              <gl:Blue>0</gl:Blue>
              <gl:Alpha>0</gl:Alpha>
            </gl:AccumulatorFormat>
            <gl:Buffers>2</gl:Buffers>
            <gl:Stereo>false</gl:Stereo>
          </gl:GraphicsMode>
        </Combinator>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.BonVisionResources.bonsai" />
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="res:LoadResources" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="num:CreateRandom">
          <num:Seed xsi:nil="true" />
        </Combinator>
      </Expression>
      <Expression xsi:type="BehaviorSubject">
        <Name>rand</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>drawStim</Name>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawQuad.bonsai">
        <ExtentX>10</ExtentX>
        <ExtentY>10</ExtentY>
        <LocationX>-2</LocationX>
        <LocationY>-16</LocationY>
        <Layer>10</Layer>
        <Angle>15</Angle>
        <ColorR>1</ColorR>
        <ColorG>1</ColorG>
        <ColorB>1</ColorB>
        <ColorA>1</ColorA>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:RenderFrame" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:Timer">
          <gl:DueTime>PT10S</gl:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:SubscribeWhen" />
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.OrthographicView.bonsai">
        <Left>-94.5</Left>
        <Right>0</Right>
        <Bottom>-27.1</Bottom>
        <Top>50.9</Top>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="IncludeWorkflow" Path="BonVision:Environment.NormalizedView.bonsai" />
      </Expression>
      <Expression xsi:type="BehaviorSubject">
        <Name>drawStim</Name>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.SphereMapping.bonsai">
        <FaceSize xsi:nil="true" />
        <ClearColor>Gray</ClearColor>
        <Width xsi:nil="true" />
        <Height xsi:nil="true" />
        <RotationZ>0</RotationZ>
        <RotationY>0</RotationY>
        <RotationX>0</RotationX>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.ViewWindow.bonsai">
        <Width>37.5</Width>
        <Height>30</Height>
        <Rotation>
          <X>0</X>
          <Y>44.00000008604669</Y>
          <Z>0</Z>
        </Rotation>
        <Translation>
          <X>-12</X>
          <Y>6.2</Y>
          <Z>-12.6</Z>
        </Translation>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.DrawViewport.bonsai">
        <X>0</X>
        <Y>0</Y>
        <Width>1</Width>
        <Height>1</Height>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>LogPath</Name>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="FileName" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.FrameEventLogger.bonsai">
        <Name>Events</Name>
        <Append>false</Append>
        <Overwrite>false</Overwrite>
        <Suffix>FileCount</Suffix>
        <FileName>C:\Data\Test\2022-09-29\Log.csv</FileName>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>C:\Data\Test\</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="BehaviorSubject">
        <Name>Saving Dir</Name>
      </Expression>
      <Expression xsi:type="scr:PythonSource">
        <scr:Script>from System import DateTime,String

@returns(String)
def generate(): 
  yield (DateTime.Now).ToString("yyyy-MM-dd")</scr:Script>
      </Expression>
      <Expression xsi:type="BehaviorSubject">
        <Name>DateDir</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>Saving Dir</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>DateDir</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>\Log.csv</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Zip" />
      </Expression>
      <Expression xsi:type="Format">
        <Format>{0}{1}{2}</Format>
        <Selector>Item1,Item2,Item3</Selector>
      </Expression>
      <Expression xsi:type="BehaviorSubject">
        <Name>LogPath</Name>
      </Expression>
      <Expression xsi:type="CreateAsync">
        <Name>Oddball Protocol</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="NestedWorkflow">
              <Name>Inverse Oddball</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="io:CsvReader">
                    <io:FileName>inverse_oddball.csv</io:FileName>
                    <io:ListSeparator>,</io:ListSeparator>
                    <io:ScanPattern />
                    <io:SkipRows>1</io:SkipRows>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>rand</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="num:Permutation" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Expression>new(Double.Parse(it[0]) as Ori,
Double.Parse(it[1]) as SFreq,
Double.Parse(it[2]) as TFreq,
Double.Parse(it[3]) as Contrast
)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="CreateObservable">
                    <Name>GratingPres</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>drawStim</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>GratingParams</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Angle" Selector="Ori" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>GratingParams</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="SpatialFrequency" Selector="SFreq" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>GratingParams</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="TemporalFrequency" Selector="TFreq" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>GratingParams</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Contrast" Selector="Contrast" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawGratings.bonsai">
                          <LocationX>0</LocationX>
                          <LocationY>0</LocationY>
                          <Layer>0</Layer>
                          <Angle>0</Angle>
                          <SpatialFrequency>0.08</SpatialFrequency>
                          <TemporalFrequency>2</TemporalFrequency>
                          <Phase>0</Phase>
                          <SquareWave>false</SquareWave>
                          <Contrast>1</Contrast>
                          <DutyCycle xsi:nil="true" />
                          <Radius>1</Radius>
                          <Aperture>0</Aperture>
                          <Opacity>1</Opacity>
                          <ExtentX>360</ExtentX>
                          <ExtentY>360</ExtentY>
                        </Expression>
                        <Expression xsi:type="scr:PythonSource">
                          <scr:Script>from System import Random, TimeSpan
random = Random()

@returns(TimeSpan)
def generate():
  ind = random.Next(0,1)
  yield TimeSpan.FromSeconds(random.NextDouble() * (3 - 2))</scr:Script>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format>ISI:{0}</Format>
                          <Selector>TotalSeconds</Selector>
                          <Name>Events</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DueTime" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:Timer">
                            <gl:DueTime>PT0.3S</gl:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:TakeUntil" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:Delay">
                            <gl:DueTime>PT0.933S</gl:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="SubscribeSubject">
                          <Name>drawStim</Name>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawQuad.bonsai">
                          <ExtentX>10</ExtentX>
                          <ExtentY>10</ExtentY>
                          <LocationX>-2</LocationX>
                          <LocationY>-16</LocationY>
                          <Layer>10</Layer>
                          <Angle>15</Angle>
                          <ColorR>0</ColorR>
                          <ColorG>0</ColorG>
                          <ColorB>0</ColorB>
                          <ColorA>1</ColorA>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:TakeUntil" />
                        </Expression>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format xsi:nil="true" />
                          <Selector>Ori,SFreq,TFreq,Contrast</Selector>
                          <Name>Events</Name>
                        </Expression>
                        <Expression xsi:type="AsyncSubject">
                          <Name>GratingParams</Name>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="SubscribeSubject">
                            <Name>drawStim</Name>
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="Combinator">
                            <Combinator xsi:type="gl:RenderFrame" />
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="Combinator">
                            <Combinator xsi:type="rx:ElementIndex" />
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="MemberSelector">
                            <Selector>Index</Selector>
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="Mod">
                            <Operand xsi:type="IntProperty">
                              <Value>2</Value>
                            </Operand>
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="PropertyMapping">
                            <PropertyMappings>
                              <Property Name="ColorR" />
                              <Property Name="ColorG" />
                              <Property Name="ColorB" />
                            </PropertyMappings>
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawQuad.bonsai">
                            <ExtentX>10</ExtentX>
                            <ExtentY>10</ExtentY>
                            <LocationX>100</LocationX>
                            <LocationY>-40</LocationY>
                            <Layer>100</Layer>
                            <Angle>0</Angle>
                            <ColorR>1</ColorR>
                            <ColorG>1</ColorG>
                            <ColorB>1</ColorB>
                            <ColorA>1</ColorA>
                          </Builder>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="9" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="9" Label="Source2" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="9" Label="Source3" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="9" Label="Source4" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source5" />
                        <Edge From="9" To="14" Label="Source1" />
                        <Edge From="10" To="11" Label="Source1" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="15" Label="Source2" />
                        <Edge From="13" To="14" Label="Source2" />
                        <Edge From="13" To="19" Label="Source2" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="16" Label="Source1" />
                        <Edge From="17" To="18" Label="Source1" />
                        <Edge From="18" To="19" Label="Source1" />
                        <Edge From="20" To="21" Label="Source1" />
                        <Edge From="21" To="22" Label="Source1" />
                        <Edge From="23" To="29" Label="Source1" />
                        <Edge From="24" To="25" Label="Source1" />
                        <Edge From="25" To="26" Label="Source1" />
                        <Edge From="26" To="27" Label="Source1" />
                        <Edge From="27" To="28" Label="Source1" />
                        <Edge From="28" To="29" Label="Source2" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Concat" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:RepeatCount">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Last" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="2" Label="Source1" />
                  <Edge From="1" To="2" Label="Source2" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gl:Delay">
                <gl:DueTime>PT5S</gl:DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="NestedWorkflow">
              <Name>Oddball</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="io:CsvReader">
                    <io:FileName>oddball_home.csv</io:FileName>
                    <io:ListSeparator>,</io:ListSeparator>
                    <io:ScanPattern />
                    <io:SkipRows>1</io:SkipRows>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>rand</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="num:Permutation" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Expression>new(Double.Parse(it[0]) as Ori,
Double.Parse(it[1]) as SFreq,
Double.Parse(it[2]) as TFreq,
Double.Parse(it[3]) as Contrast
)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="CreateObservable">
                    <Name>GratingPres</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>drawStim</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>GratingParams</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Angle" Selector="Ori" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>GratingParams</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="SpatialFrequency" Selector="SFreq" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>GratingParams</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="TemporalFrequency" Selector="TFreq" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>GratingParams</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Contrast" Selector="Contrast" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawGratings.bonsai">
                          <LocationX>0</LocationX>
                          <LocationY>0</LocationY>
                          <Layer>0</Layer>
                          <Angle>5156.62</Angle>
                          <SpatialFrequency>0.08</SpatialFrequency>
                          <TemporalFrequency>1</TemporalFrequency>
                          <Phase>0</Phase>
                          <SquareWave>false</SquareWave>
                          <Contrast>1</Contrast>
                          <DutyCycle xsi:nil="true" />
                          <Radius>1</Radius>
                          <Aperture>0</Aperture>
                          <Opacity>1</Opacity>
                          <ExtentX>360</ExtentX>
                          <ExtentY>360</ExtentY>
                        </Expression>
                        <Expression xsi:type="scr:PythonSource">
                          <scr:Script>from System import Random, TimeSpan
random = Random()

@returns(TimeSpan)
def generate():
  ind = random.Next(0,1)
  yield TimeSpan.FromSeconds(random.NextDouble() * (3 - 2))</scr:Script>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format>ISI:{0}</Format>
                          <Selector>TotalSeconds</Selector>
                          <Name>Events</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DueTime" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:Timer">
                            <gl:DueTime>PT5S</gl:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:TakeUntil" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:Delay">
                            <gl:DueTime>PT0.204S</gl:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="SubscribeSubject">
                          <Name>drawStim</Name>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawQuad.bonsai">
                          <ExtentX>10</ExtentX>
                          <ExtentY>10</ExtentY>
                          <LocationX>-2</LocationX>
                          <LocationY>-16</LocationY>
                          <Layer>10</Layer>
                          <Angle>15</Angle>
                          <ColorR>0</ColorR>
                          <ColorG>0</ColorG>
                          <ColorB>0</ColorB>
                          <ColorA>1</ColorA>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:TakeUntil" />
                        </Expression>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format xsi:nil="true" />
                          <Selector>Ori,SFreq,TFreq,Contrast</Selector>
                          <Name>Events</Name>
                        </Expression>
                        <Expression xsi:type="AsyncSubject">
                          <Name>GratingParams</Name>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="SubscribeSubject">
                            <Name>drawStim</Name>
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="Combinator">
                            <Combinator xsi:type="gl:RenderFrame" />
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="Combinator">
                            <Combinator xsi:type="rx:ElementIndex" />
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="MemberSelector">
                            <Selector>Index</Selector>
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="Mod">
                            <Operand xsi:type="IntProperty">
                              <Value>2</Value>
                            </Operand>
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="PropertyMapping">
                            <PropertyMappings>
                              <Property Name="ColorR" />
                              <Property Name="ColorG" />
                              <Property Name="ColorB" />
                            </PropertyMappings>
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawQuad.bonsai">
                            <ExtentX>10</ExtentX>
                            <ExtentY>10</ExtentY>
                            <LocationX>100</LocationX>
                            <LocationY>-40</LocationY>
                            <Layer>100</Layer>
                            <Angle>0</Angle>
                            <ColorR>1</ColorR>
                            <ColorG>1</ColorG>
                            <ColorB>1</ColorB>
                            <ColorA>1</ColorA>
                          </Builder>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="9" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="9" Label="Source2" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="9" Label="Source3" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="9" Label="Source4" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source5" />
                        <Edge From="9" To="14" Label="Source1" />
                        <Edge From="10" To="11" Label="Source1" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="15" Label="Source2" />
                        <Edge From="13" To="14" Label="Source2" />
                        <Edge From="13" To="19" Label="Source2" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="16" Label="Source1" />
                        <Edge From="17" To="18" Label="Source1" />
                        <Edge From="18" To="19" Label="Source1" />
                        <Edge From="20" To="21" Label="Source1" />
                        <Edge From="21" To="22" Label="Source1" />
                        <Edge From="23" To="29" Label="Source1" />
                        <Edge From="24" To="25" Label="Source1" />
                        <Edge From="25" To="26" Label="Source1" />
                        <Edge From="26" To="27" Label="Source1" />
                        <Edge From="27" To="28" Label="Source1" />
                        <Edge From="28" To="29" Label="Source2" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Concat" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:RepeatCount">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Last" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="2" Label="Source1" />
                  <Edge From="1" To="2" Label="Source2" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gl:Delay">
                <gl:DueTime>PT5S</gl:DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="NestedWorkflow">
              <Name>Control Equal Probability</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="io:CsvReader">
                    <io:FileName>control_oddball.csv</io:FileName>
                    <io:ListSeparator>,</io:ListSeparator>
                    <io:ScanPattern />
                    <io:SkipRows>1</io:SkipRows>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>rand</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="num:Permutation" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Expression>new(Double.Parse(it[0]) as Ori,
Double.Parse(it[1]) as SFreq,
Double.Parse(it[2]) as TFreq,
Double.Parse(it[3]) as Contrast
)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="CreateObservable">
                    <Name>GratingPres</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>drawStim</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>GratingParams</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Angle" Selector="Ori" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>GratingParams</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="SpatialFrequency" Selector="SFreq" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>GratingParams</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="TemporalFrequency" Selector="TFreq" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>GratingParams</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Contrast" Selector="Contrast" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawGratings.bonsai">
                          <LocationX>0</LocationX>
                          <LocationY>0</LocationY>
                          <Layer>0</Layer>
                          <Angle>12032.1133</Angle>
                          <SpatialFrequency>8</SpatialFrequency>
                          <TemporalFrequency>2</TemporalFrequency>
                          <Phase>0</Phase>
                          <SquareWave>false</SquareWave>
                          <Contrast>1</Contrast>
                          <DutyCycle xsi:nil="true" />
                          <Radius>1</Radius>
                          <Aperture>0</Aperture>
                          <Opacity>1</Opacity>
                          <ExtentX>360</ExtentX>
                          <ExtentY>360</ExtentY>
                        </Expression>
                        <Expression xsi:type="scr:PythonSource">
                          <scr:Script>from System import Random, TimeSpan
random = Random()

@returns(TimeSpan)
def generate():
  ind = random.Next(0,1)
  yield TimeSpan.FromSeconds(random.NextDouble() * (3 - 2))</scr:Script>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format>ISI:{0}</Format>
                          <Selector>TotalSeconds</Selector>
                          <Name>Events</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="DueTime" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:Timer">
                            <gl:DueTime>PT0.3S</gl:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:TakeUntil" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:Delay">
                            <gl:DueTime>PT0.678S</gl:DueTime>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="SubscribeSubject">
                          <Name>drawStim</Name>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawQuad.bonsai">
                          <ExtentX>10</ExtentX>
                          <ExtentY>10</ExtentY>
                          <LocationX>-2</LocationX>
                          <LocationY>-16</LocationY>
                          <Layer>10</Layer>
                          <Angle>15</Angle>
                          <ColorR>0</ColorR>
                          <ColorG>0</ColorG>
                          <ColorB>0</ColorB>
                          <ColorA>1</ColorA>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:TakeUntil" />
                        </Expression>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Logging.LogEvent.bonsai">
                          <Format xsi:nil="true" />
                          <Selector>Ori,SFreq,TFreq,Contrast</Selector>
                          <Name>Events</Name>
                        </Expression>
                        <Expression xsi:type="AsyncSubject">
                          <Name>GratingParams</Name>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="SubscribeSubject">
                            <Name>drawStim</Name>
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="Combinator">
                            <Combinator xsi:type="gl:RenderFrame" />
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="Combinator">
                            <Combinator xsi:type="rx:ElementIndex" />
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="MemberSelector">
                            <Selector>Index</Selector>
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="Mod">
                            <Operand xsi:type="IntProperty">
                              <Value>2</Value>
                            </Operand>
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="PropertyMapping">
                            <PropertyMappings>
                              <Property Name="ColorR" />
                              <Property Name="ColorG" />
                              <Property Name="ColorB" />
                            </PropertyMappings>
                          </Builder>
                        </Expression>
                        <Expression xsi:type="Disable">
                          <Builder xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawQuad.bonsai">
                            <ExtentX>10</ExtentX>
                            <ExtentY>10</ExtentY>
                            <LocationX>100</LocationX>
                            <LocationY>-40</LocationY>
                            <Layer>100</Layer>
                            <Angle>0</Angle>
                            <ColorR>1</ColorR>
                            <ColorG>1</ColorG>
                            <ColorB>1</ColorB>
                            <ColorA>1</ColorA>
                          </Builder>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="9" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="9" Label="Source2" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="9" Label="Source3" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="9" Label="Source4" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source5" />
                        <Edge From="9" To="14" Label="Source1" />
                        <Edge From="10" To="11" Label="Source1" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="15" Label="Source2" />
                        <Edge From="13" To="14" Label="Source2" />
                        <Edge From="13" To="19" Label="Source2" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="16" Label="Source1" />
                        <Edge From="17" To="18" Label="Source1" />
                        <Edge From="18" To="19" Label="Source1" />
                        <Edge From="20" To="21" Label="Source1" />
                        <Edge From="21" To="22" Label="Source1" />
                        <Edge From="23" To="29" Label="Source1" />
                        <Edge From="24" To="25" Label="Source1" />
                        <Edge From="25" To="26" Label="Source1" />
                        <Edge From="26" To="27" Label="Source1" />
                        <Edge From="27" To="28" Label="Source1" />
                        <Edge From="28" To="29" Label="Source2" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Concat" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:RepeatCount">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Last" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="2" Label="Source1" />
                  <Edge From="1" To="2" Label="Source2" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gl:Delay">
                <gl:DueTime>PT5S</gl:DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Concat" />
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="6" Label="Source2" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="6" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source3" />
            <Edge From="6" To="7" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:DelaySubscription">
          <rx:DueTime>PT10S</rx:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="WorkflowOutput" />
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="7" To="9" Label="Source1" />
      <Edge From="7" To="18" Label="Source1" />
      <Edge From="8" To="9" Label="Source2" />
      <Edge From="9" To="10" Label="Source1" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="11" To="12" Label="Source1" />
      <Edge From="12" To="13" Label="Source1" />
      <Edge From="13" To="14" Label="Source1" />
      <Edge From="14" To="15" Label="Source1" />
      <Edge From="16" To="17" Label="Source1" />
      <Edge From="17" To="18" Label="Source2" />
      <Edge From="19" To="20" Label="Source1" />
      <Edge From="21" To="22" Label="Source1" />
      <Edge From="23" To="26" Label="Source1" />
      <Edge From="24" To="26" Label="Source2" />
      <Edge From="25" To="26" Label="Source3" />
      <Edge From="26" To="27" Label="Source1" />
      <Edge From="27" To="28" Label="Source1" />
      <Edge From="29" To="30" Label="Source1" />
      <Edge From="30" To="31" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>